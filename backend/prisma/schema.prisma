// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum ResourceType {
  folder
  image
  video
}

model Resource {
  id                 Int          @id @default(autoincrement())
  resource_id        String       @unique
  type               ResourceType
  description        String?
  project            Project?
  parent_resource_id Int?
  parent_resource    Resource?    @relation("ParentChildResources", fields: [parent_resource_id], references: [id])
  child_resources    Resource[]   @relation("ParentChildResources")
  is_thumbnail       Boolean      @default(false)
  createdAt          DateTime     @default(now())
  updatedAt          DateTime?    @updatedAt
}

model Project {
  id              Int               @id @default(autoincrement())
  resource        Resource          @relation(fields: [folder_id], references: [id])
  folder_id       Int               @unique
  project_name    String            @unique
  slug            String            @unique
  description     String?
  start_date      DateTime?
  is_show         Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime?         @updatedAt
  ProjectGroupTag ProjectGroupTag[]
}

model Group {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  createdAt       DateTime          @default(now())
  updatedAt       DateTime?         @updatedAt
  ProjectGroupTag ProjectGroupTag[]
}

model Tag {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  createdAt       DateTime          @default(now())
  updatedAt       DateTime?         @updatedAt
  ProjectGroupTag ProjectGroupTag[]
}

model ProjectGroupTag {
  id         Int       @id @default(autoincrement())
  project_id Int
  group_id   Int
  tag_id     Int
  project    Project   @relation(fields: [project_id], references: [id])
  group      Group     @relation(fields: [group_id], references: [id])
  tag        Tag       @relation(fields: [tag_id], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt

  @@unique([project_id, group_id, tag_id])
}
